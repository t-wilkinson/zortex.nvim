-- Updated notifications configuration for config.lua
notifications = {
	-- Global settings
	enabled = true,
	check_interval_minutes = 1, -- Check every minute for scheduled notifications
	default_advance_minutes = 15, -- Default notification advance time for calendar

	-- Provider configuration
	providers = {
		system = {
			enabled = true,
			commands = {
				macos = "terminal-notifier -title '%s' -message '%s' -sound default",
				linux = "notify-send -u normal -t 10000 '%s' '%s'",
				termux = "termux-notification --title '%s' --content '%s'",
			},
		},
		ntfy = {
			enabled = true,
			server_url = "http://ntfy.sh", -- or your self-hosted server
			topic = "zortex-notify",
			priority = "default", -- min, low, default, high, urgent
			tags = { "zortex" },
			auth_token = nil, -- optional, for authenticated topics
		},
		aws = {
			enabled = false,
			api_endpoint = nil,
			user_id = nil,
			sync = true, -- Enable calendar sync to AWS
		},
		vim = {
			enabled = true,
			timeout = 5000,
			level = vim.log.levels.INFO,
		},
	},

	-- Default providers for different notification types
	default_providers = { "vim", "system" },
	calendar_providers = { "vim", "system", "ntfy" },
	timer_providers = { "vim", "system" },
	pomodoro_providers = { "vim", "system" },

	-- Pomodoro settings
	pomodoro = {
		work_duration = 25, -- minutes
		short_break = 5, -- minutes
		long_break = 15, -- minutes
		long_break_after = 4, -- number of work sessions before long break
		auto_start_break = true, -- Auto-start breaks after work
		auto_start_work = false, -- Auto-start work after breaks
		sound = "default", -- Sound for pomodoro notifications
	},

	-- Timer settings
	timers = {
		default_sound = "default",
		allow_multiple = true, -- Allow multiple timers at once
		warnings = { 300, 60 }, -- Warning notifications at 5 min and 1 min
	},

	-- Calendar settings
	calendar = {
		sync_days = 365, -- Days ahead to sync
		default_advance_minutes = 15,
	},

	-- State persistence
	state_file = ".z/notifications_state.json",
	log_file = ".z/notifications_log.json",
}